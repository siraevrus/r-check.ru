<?php

require_once __DIR__ . '/vendor/autoload.php';
use ReproCRM\Config\Database;
use ReproCRM\Utils\Validator;
use ReproCRM\Utils\EmailNotifier;

$_ENV['DB_TYPE'] = 'sqlite';
$db = Database::getInstance();
$pdo = $db;
$validator = new Validator();
$emailNotifier = new EmailNotifier();

$message = '';
$messageType = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = trim($_POST['email'] ?? '');

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    if (empty($email)) {
        $message = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
        $messageType = 'error';
    } elseif (!$validator->validateEmail($email)) {
        $message = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';
        $messageType = 'error';
    } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email
        $stmt = $pdo->prepare("SELECT id, full_name, email FROM users WHERE email = ?");
        $stmt->execute([$email]);
        $user = $stmt->fetch();

        if ($user) {
            try {
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
                $newPassword = bin2hex(random_bytes(6)); // 12-—Å–∏–º–≤–æ–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
                $passwordHash = password_hash($newPassword, PASSWORD_DEFAULT);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                $updateStmt = $pdo->prepare("UPDATE users SET password_hash = ?, updated_at = datetime('now') WHERE id = ?");
                $updateStmt->execute([$passwordHash, $user['id']]);
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –Ω–∞ email
                $subject = '–í–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å - –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –ø—Ä–æ–¥–∞–∂';
                $fullName = $user['full_name'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
                
                $emailBody = "
<!DOCTYPE html>
<html>
<head>
    <meta charset='UTF-8'>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #667eea; color: white; padding: 20px; text-align: center; border-radius: 5px 5px 0 0; }
        .content { padding: 20px; background: #f9f9f9; border-radius: 0 0 5px 5px; }
        .password-box { background: white; border: 2px solid #667eea; padding: 20px; text-align: center; margin: 20px 0; border-radius: 5px; }
        .password-box h2 { color: #667eea; margin: 0 0 10px 0; font-size: 14px; text-transform: uppercase; }
        .password-box .password { font-size: 28px; font-weight: bold; color: #333; font-family: monospace; letter-spacing: 2px; }
        .warning { background: #fff3cd; border: 1px solid #ffc107; padding: 15px; margin: 15px 0; border-radius: 5px; }
        .footer { padding: 20px; text-align: center; font-size: 12px; color: #666; border-top: 1px solid #ddd; }
    </style>
</head>
<body>
    <div class='container'>
        <div class='header'>
            <h1>üîê –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h1>
        </div>
        <div class='content'>
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>$fullName</strong>!</p>
            
            <p>–í–∞—à –ø–∞—Ä–æ–ª—å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–∏–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</p>
            
            <div class='password-box'>
                <h2>–í–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</h2>
                <div class='password'>$newPassword</div>
            </div>
            
            <div class='warning'>
                <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong>
                <ul>
                    <li>–≠—Ç–æ –≤–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É</li>
                    <li>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ</li>
                    <li>–ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π</li>
                    <li>–ù–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å</li>
                </ul>
            </div>
            
            <p><strong>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</strong></p>
            <ol>
                <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href='" . ($_ENV['APP_URL'] ?? 'http://localhost:8000') . "/user.php'>—Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞</a></li>
                <li>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email: <strong>$email</strong></li>
                <li>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—ã—à–µ)</li>
                <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–í–æ–π—Ç–∏'</li>
            </ol>
            
            <p>–ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –Ω–∞ –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –≤ —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–æ—Ñ–∏–ª—è.</p>
        </div>
        <div class='footer'>
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
            <p>¬© " . date('Y') . " –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –ø—Ä–æ–¥–∞–∂ | <a href='" . ($_ENV['APP_URL'] ?? 'http://localhost:8000') . "'>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç</a></p>
        </div>
    </div>
</body>
</html>
                ";
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
                $emailResult = $emailNotifier->send($email, $subject, $emailBody, true);
                
                if ($emailResult) {
                    $message = '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π email. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞.';
                    $messageType = 'success';
                    error_log("Password recovery successful for email: " . $email . " (User ID: " . $user['id'] . ")");
                } else {
                    $message = '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.';
                    $messageType = 'warning';
                    error_log("Password reset for user but email sending failed: " . $email);
                }
                
            } catch (Exception $e) {
                $message = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è: ' . $e->getMessage();
                $messageType = 'error';
                error_log("Password recovery error: " . $e->getMessage());
            }
        } else {
            // Email –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            // (–Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ª–∏—á–∏–∏ email –≤ —Å–∏—Å—Ç–µ–º–µ)
            $message = '–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º email —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞ –Ω–µ–≥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∏—Å—å–º–æ —Å –Ω–æ–≤—ã–º –ø–∞—Ä–æ–ª–µ–º.';
            $messageType = 'success';
            error_log("Password recovery attempted for non-existent email: " . $email);
        }
    }
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –ø—Ä–æ–¥–∞–∂</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .gradient-bg {
            background: white;
        }
        .form-input {
            transition: all 0.3s ease;
        }
        .form-input:focus {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }
    </style>
</head>
<body class="min-h-screen gradient-bg">
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white rounded-2xl p-8 shadow-2xl max-w-md w-full mx-4">
            <div class="text-center mb-8">
                <div class="mx-auto h-16 w-16 bg-blue-600 rounded-full flex items-center justify-center mb-4">
                    <i class="fas fa-key text-white text-2xl"></i>
                </div>
                <h2 class="text-3xl font-extrabold text-gray-900 mb-2">
                    –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
                </h2>
                <p class="text-sm text-gray-600">
                    –í–≤–µ–¥–∏—Ç–µ email, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç
                </p>
            </div>

            <?php if ($message): ?>
            <div class="rounded-lg p-4 mb-6 <?= $messageType === 'success' ? 'bg-green-50 border border-green-200 text-green-800' : 'bg-red-50 border border-red-200 text-red-800' ?>">
                <div class="flex items-center">
                    <i class="fas <?= $messageType === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle' ?> mr-3"></i>
                    <div>
                        <h3 class="text-sm font-medium">
                            <?= $messageType === 'success' ? '–£—Å–ø–µ—à–Ω–æ!' : '–û—à–∏–±–∫–∞' ?>
                        </h3>
                        <div class="mt-1 text-sm">
                            <?= htmlspecialchars($message) ?>
                        </div>
                    </div>
                </div>
            </div>
            <?php endif; ?>

            <form method="POST" class="space-y-6">
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                        Email <span class="text-red-500">*</span>
                    </label>
                    <input id="email" name="email" type="email" required
                           value="<?= htmlspecialchars($_POST['email'] ?? '') ?>"
                           class="form-input appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-lg focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                           placeholder="user@example.com">
                </div>

                <div>
                    <button type="submit" class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white btn-primary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                            <i class="fas fa-paper-plane text-blue-500 group-hover:text-blue-400"></i>
                        </span>
                        –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å
                    </button>
                </div>
            </form>

            <div class="text-center mt-6 space-y-2">
                <p class="text-sm text-gray-600">
                    –í—Å–ø–æ–º–Ω–∏–ª–∏ –ø–∞—Ä–æ–ª—å?
                    <a href="/user.php" class="font-medium text-blue-600 hover:text-blue-500">
                        –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                    </a>
                </p>
                <p class="text-sm">
                    <a href="/" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-arrow-left mr-1"></i>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                    </a>
                </p>
            </div>
        </div>
    </div>

    <script>
        // –í–∞–ª–∏–¥–∞—Ü–∏—è email –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        document.addEventListener('DOMContentLoaded', function() {
            const email = document.getElementById('email');

            email.addEventListener('input', function() {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (this.value && !emailRegex.test(this.value)) {
                    this.setCustomValidity('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email');
                } else {
                    this.setCustomValidity('');
                }
            });
        });
    </script>
</body>
</html>
